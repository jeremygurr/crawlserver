#!/bin/bash

if [ ! "$commonSourced" ]; then

if [ ! "$1" ]; then
	echo "Usage: $0 {tag to update to}"
	exit 1
fi

if [ ! -f localConfig ]; then
	echo "Make a localConfig out of localConfig.example before running this."
	exit 1
fi

source localConfig || exit 1

if [ ! "$code1" ]; then
	echo "Missing $code1"
	exit 1
fi

code="$code1/dcssca-$v/$code2"

if [ ! -d "$code" ]; then
	cd "$code1" || exit 1
	git clone https://github.com/jeremygurr/dcssca.git -b "$v" "dcssca-$v" || exit 1
fi

if [ ! -f "$code/contrib/sqlite/Makefile" ]; then
	cd "$code" || exit 1
	git submodule update --init || exit 1
fi

# usage: hydrate {from file} {to file}
#   will replace variables in from file with values of variables defined in current shell environment
unset hydrate
hydrate() {
local from to line
from="$1"
shift
to="$1"
local returnValue=0
if [ -f "$to" ]; then
	echo "File already exists: $to"
	return 1
fi
while true; do
    if [ ! -f "$from" ]; then
        echo "Missing file: $from"
        fail
    fi
    local OIFS="$IFS"
    IFS=$'\n'
    while read -r line; do
        line="${line//\"/\\\"}"
        eval "echo \"$line\"" >>$to || fail
    done < $from
    break
done
IFS="$OIFS"
return $returnValue
}

commonSourced=true
fi
